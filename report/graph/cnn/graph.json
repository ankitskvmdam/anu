{
  "options": {
    "directed": true,
    "multigraph": false,
    "compound": true
  },
  "nodes": [
    {
      "v": ".",
      "value": {
        "class": ""
      }
    },
    {
      "v": "./conv1",
      "value": {
        "id": "./conv1",
        "class": "ConvolutionNeuralNetwork",
        "color": "#2e91b8",
        "height": 50,
        "width": 100,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "CNN",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 328,
              "endIdx": 331,
              "_contents": "CNN"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv1",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 322,
              "endIdx": 327,
              "_contents": "conv1"
            }
          }
        },
        "userGeneratedId": "conv1",
        "style": {
          "fill": "rgba(46, 145, 184, 0.1)"
        },
        "isMetanode": true
      },
      "parent": "."
    },
    {
      "v": "./conv1/featureMatrix",
      "value": {
        "id": "./conv1/featureMatrix",
        "class": "Input",
        "color": "#b82e3e",
        "height": 50,
        "width": 113.60000000000001,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Input",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 46,
              "endIdx": 51,
              "_contents": "Input"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "featureMatrix",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 31,
              "endIdx": 44,
              "_contents": "featureMatrix"
            }
          }
        },
        "userGeneratedId": "featureMatrix",
        "style": {
          "fill": "#b82e3e"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv1/conv2d",
      "value": {
        "id": "./conv1/conv2d",
        "class": "Convolution",
        "color": "#502eb8",
        "height": 50,
        "width": 104.8,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Convolution",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 87,
              "endIdx": 98,
              "_contents": "Convolution"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 80,
              "endIdx": 86,
              "_contents": "conv2d"
            }
          }
        },
        "userGeneratedId": "conv2d",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv1/a_BatchNormalization1",
      "value": {
        "id": "./conv1/a_BatchNormalization1",
        "class": "BatchNormalization",
        "color": "#2e97b8",
        "height": 30,
        "width": 159.04,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "BatchNorm",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 102,
              "endIdx": 111,
              "_contents": "BatchNorm"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2e97b8"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv1/a_RectifiedLinearUnit1",
      "value": {
        "id": "./conv1/a_RectifiedLinearUnit1",
        "class": "RectifiedLinearUnit",
        "color": "#2eb881",
        "height": 30,
        "width": 155.52,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "ReLU",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 115,
              "endIdx": 119,
              "_contents": "ReLU"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2eb881"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv1/maxPool2d",
      "value": {
        "id": "./conv1/maxPool2d",
        "class": "MaxPooling",
        "color": "#b88c2e",
        "height": 50,
        "width": 103.84,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "MaxPooling",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 134,
              "endIdx": 144,
              "_contents": "MaxPooling"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "maxPool2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 123,
              "endIdx": 132,
              "_contents": "maxPool2d"
            }
          }
        },
        "userGeneratedId": "maxPool2d",
        "style": {
          "fill": "#b88c2e"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv1/out",
      "value": {
        "id": "./conv1/out",
        "class": "Output",
        "color": "#502eb8",
        "height": 50,
        "width": 68.32,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 153,
              "endIdx": 156,
              "_contents": "Out"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 148,
              "endIdx": 151,
              "_contents": "out"
            }
          }
        },
        "userGeneratedId": "out",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv1"
    },
    {
      "v": "./conv2",
      "value": {
        "id": "./conv2",
        "class": "ConvolutionNeuralNetwork1",
        "color": "#b82e91",
        "height": 50,
        "width": 100,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "CNN1",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 342,
              "endIdx": 346,
              "_contents": "CNN1"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv2",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 336,
              "endIdx": 341,
              "_contents": "conv2"
            }
          }
        },
        "userGeneratedId": "conv2",
        "style": {
          "fill": "rgba(184, 46, 145, 0.1)"
        },
        "isMetanode": true
      },
      "parent": "."
    },
    {
      "v": "./conv2/convOutputAsInput",
      "value": {
        "id": "./conv2/convOutputAsInput",
        "class": "Input",
        "color": "#b82e3e",
        "height": 50,
        "width": 156.8,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Input",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 211,
              "endIdx": 216,
              "_contents": "Input"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "convOutputAsInput",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 192,
              "endIdx": 209,
              "_contents": "convOutputAsInput"
            }
          }
        },
        "userGeneratedId": "convOutputAsInput",
        "style": {
          "fill": "#b82e3e"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv2/conv2d",
      "value": {
        "id": "./conv2/conv2d",
        "class": "Convolution",
        "color": "#502eb8",
        "height": 50,
        "width": 104.8,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Conv",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 256,
              "endIdx": 260,
              "_contents": "Conv"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 249,
              "endIdx": 255,
              "_contents": "conv2d"
            }
          }
        },
        "userGeneratedId": "conv2d",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv2/a_BatchNormalization2",
      "value": {
        "id": "./conv2/a_BatchNormalization2",
        "class": "BatchNormalization",
        "color": "#2e97b8",
        "height": 30,
        "width": 159.04,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "BatchNorm",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 264,
              "endIdx": 273,
              "_contents": "BatchNorm"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2e97b8"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv2/a_RectifiedLinearUnit2",
      "value": {
        "id": "./conv2/a_RectifiedLinearUnit2",
        "class": "RectifiedLinearUnit",
        "color": "#2eb881",
        "height": 30,
        "width": 155.52,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "ReLU",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 277,
              "endIdx": 281,
              "_contents": "ReLU"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2eb881"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv2/maxPool2d",
      "value": {
        "id": "./conv2/maxPool2d",
        "class": "MaxPooling",
        "color": "#b88c2e",
        "height": 50,
        "width": 103.84,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "MaxPooling",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 296,
              "endIdx": 306,
              "_contents": "MaxPooling"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "maxPool2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 285,
              "endIdx": 294,
              "_contents": "maxPool2d"
            }
          }
        },
        "userGeneratedId": "maxPool2d",
        "style": {
          "fill": "#b88c2e"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv2/out",
      "value": {
        "id": "./conv2/out",
        "class": "Output",
        "color": "#502eb8",
        "height": 50,
        "width": 68.32,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 315,
              "endIdx": 318,
              "_contents": "Out"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 310,
              "endIdx": 313,
              "_contents": "out"
            }
          }
        },
        "userGeneratedId": "out",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv2"
    },
    {
      "v": "./conv3",
      "value": {
        "id": "./conv3",
        "class": "ConvolutionNeuralNetwork1",
        "color": "#b82e91",
        "height": 50,
        "width": 100,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "CNN1",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 356,
              "endIdx": 360,
              "_contents": "CNN1"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv3",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 350,
              "endIdx": 355,
              "_contents": "conv3"
            }
          }
        },
        "userGeneratedId": "conv3",
        "style": {
          "fill": "rgba(184, 46, 145, 0.1)"
        },
        "isMetanode": true
      },
      "parent": "."
    },
    {
      "v": "./conv3/convOutputAsInput",
      "value": {
        "id": "./conv3/convOutputAsInput",
        "class": "Input",
        "color": "#b82e3e",
        "height": 50,
        "width": 156.8,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Input",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 211,
              "endIdx": 216,
              "_contents": "Input"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "convOutputAsInput",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 192,
              "endIdx": 209,
              "_contents": "convOutputAsInput"
            }
          }
        },
        "userGeneratedId": "convOutputAsInput",
        "style": {
          "fill": "#b82e3e"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./conv3/conv2d",
      "value": {
        "id": "./conv3/conv2d",
        "class": "Convolution",
        "color": "#502eb8",
        "height": 50,
        "width": 104.8,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Conv",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 256,
              "endIdx": 260,
              "_contents": "Conv"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "conv2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 249,
              "endIdx": 255,
              "_contents": "conv2d"
            }
          }
        },
        "userGeneratedId": "conv2d",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./conv3/a_BatchNormalization2",
      "value": {
        "id": "./conv3/a_BatchNormalization2",
        "class": "BatchNormalization",
        "color": "#2e97b8",
        "height": 30,
        "width": 159.04,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "BatchNorm",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 264,
              "endIdx": 273,
              "_contents": "BatchNorm"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2e97b8"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./conv3/a_RectifiedLinearUnit2",
      "value": {
        "id": "./conv3/a_RectifiedLinearUnit2",
        "class": "RectifiedLinearUnit",
        "color": "#2eb881",
        "height": 30,
        "width": 155.52,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "ReLU",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 277,
              "endIdx": 281,
              "_contents": "ReLU"
            }
          },
          "parameters": []
        },
        "style": {
          "fill": "#2eb881"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./conv3/maxPool2d",
      "value": {
        "id": "./conv3/maxPool2d",
        "class": "MaxPooling",
        "color": "#b88c2e",
        "height": 50,
        "width": 103.84,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "MaxPooling",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 296,
              "endIdx": 306,
              "_contents": "MaxPooling"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "maxPool2d",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 285,
              "endIdx": 294,
              "_contents": "maxPool2d"
            }
          }
        },
        "userGeneratedId": "maxPool2d",
        "style": {
          "fill": "#b88c2e"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./conv3/out",
      "value": {
        "id": "./conv3/out",
        "class": "Output",
        "color": "#502eb8",
        "height": 50,
        "width": 68.32,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 315,
              "endIdx": 318,
              "_contents": "Out"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 310,
              "endIdx": 313,
              "_contents": "out"
            }
          }
        },
        "userGeneratedId": "out",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "./conv3"
    },
    {
      "v": "./convolutionOutput",
      "value": {
        "id": "./convolutionOutput",
        "class": "Output",
        "color": "#502eb8",
        "height": 50,
        "width": 149.6,
        "_source": {
          "kind": "LiteralNode",
          "type": {
            "kind": "NodeType",
            "value": "Out",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 382,
              "endIdx": 385,
              "_contents": "Out"
            }
          },
          "parameters": [],
          "alias": {
            "kind": "Identifier",
            "value": "convolutionOutput",
            "_source": {
              "sourceString": "+ConvolutionNeuralNetwork{\n    featureMatrix: Input\n    \n    [featureMatrix] -> conv2d:Convolution -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\n+ConvolutionNeuralNetwork1{\n    convOutputAsInput: Input\n    \n    [convOutputAsInput] -> conv2d:Conv -> BatchNorm -> ReLU -> maxPool2d: MaxPooling -> out: Out\n}\n\nconv1:CNN  -> conv2:CNN1 -> conv3:CNN1 -> convolutionOutput:Out",
              "startIdx": 364,
              "endIdx": 381,
              "_contents": "convolutionOutput"
            }
          }
        },
        "userGeneratedId": "convolutionOutput",
        "style": {
          "fill": "#502eb8"
        }
      },
      "parent": "."
    }
  ],
  "edges": [
    {
      "v": "./conv1/featureMatrix",
      "w": "./conv1/conv2d",
      "value": {}
    },
    {
      "v": "./conv1/conv2d",
      "w": "./conv1/a_BatchNormalization1",
      "value": {}
    },
    {
      "v": "./conv1/a_BatchNormalization1",
      "w": "./conv1/a_RectifiedLinearUnit1",
      "value": {}
    },
    {
      "v": "./conv1/a_RectifiedLinearUnit1",
      "w": "./conv1/maxPool2d",
      "value": {}
    },
    {
      "v": "./conv1/maxPool2d",
      "w": "./conv1/out",
      "value": {}
    },
    {
      "v": "./conv2/convOutputAsInput",
      "w": "./conv2/conv2d",
      "value": {}
    },
    {
      "v": "./conv2/conv2d",
      "w": "./conv2/a_BatchNormalization2",
      "value": {}
    },
    {
      "v": "./conv2/a_BatchNormalization2",
      "w": "./conv2/a_RectifiedLinearUnit2",
      "value": {}
    },
    {
      "v": "./conv2/a_RectifiedLinearUnit2",
      "w": "./conv2/maxPool2d",
      "value": {}
    },
    {
      "v": "./conv2/maxPool2d",
      "w": "./conv2/out",
      "value": {}
    },
    {
      "v": "./conv1/out",
      "w": "./conv2/convOutputAsInput",
      "value": {}
    },
    {
      "v": "./conv3/convOutputAsInput",
      "w": "./conv3/conv2d",
      "value": {}
    },
    {
      "v": "./conv3/conv2d",
      "w": "./conv3/a_BatchNormalization2",
      "value": {}
    },
    {
      "v": "./conv3/a_BatchNormalization2",
      "w": "./conv3/a_RectifiedLinearUnit2",
      "value": {}
    },
    {
      "v": "./conv3/a_RectifiedLinearUnit2",
      "w": "./conv3/maxPool2d",
      "value": {}
    },
    {
      "v": "./conv3/maxPool2d",
      "w": "./conv3/out",
      "value": {}
    },
    {
      "v": "./conv2/out",
      "w": "./conv3/convOutputAsInput",
      "value": {}
    },
    {
      "v": "./conv3/out",
      "w": "./convolutionOutput",
      "value": {}
    }
  ],
  "value": {
    "name": "main",
    "rankdir": "BT",
    "edgesep": 20,
    "ranksep": 40,
    "nodeSep": 30,
    "marginx": 20,
    "marginy": 20
  }
}